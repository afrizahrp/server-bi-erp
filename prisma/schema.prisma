generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model sys_Company {
  seq_no          Int                    @db.SmallInt
  id              String                 @id @db.Char(5)
  name            String?                @db.VarChar(50)
  iStatus         MasterRecordStatusEnum @default(ACTIVE)
  province        String?                @db.VarChar(50)
  district        String?                @db.VarChar(50)
  city            String?                @db.VarChar(50)
  address1        String?                @db.VarChar(250)
  address2        String?                @db.VarChar(250)
  address3        String?                @db.VarChar(250)
  postalCode      String?                @db.Char(6)
  phone1          String?                @db.VarChar(20)
  phone2          String?                @db.VarChar(20)
  phone3          String?                @db.VarChar(20)
  mobile1         String?                @db.VarChar(20)
  mobile2         String?                @db.VarChar(20)
  mobile3         String?                @db.VarChar(20)
  email1          String?                @db.VarChar(100)
  email2          String?                @db.VarChar(100)
  email3          String?                @db.VarChar(100)
  officialWebsite String?                @db.VarChar(100)
  companyLogo     String?                @db.VarChar(255)
  createdBy       String?                @db.Char(10)
  createdAt       DateTime
  updatedBy       String?                @db.Char(10)
  updatedAt       DateTime

  @@index([seq_no], map: "idx_sys_Company_seq_no")
}

model sys_Role {
  id            String                 @id @db.Char(20)
  name          String                 @db.VarChar(20)
  iStatus       MasterRecordStatusEnum @default(ACTIVE)
  remarks       String?                @db.VarChar(255)
  userCompanies sys_UserCompanyRole[]
}

model sys_User {
  id                 Int                    @id @default(autoincrement()) @db.SmallInt
  name               String                 @unique @db.VarChar(50)
  email              String                 @db.VarChar(100)
  isAdmin            Boolean                @default(false)
  iStatus            MasterRecordStatusEnum @default(ACTIVE)
  image              String?                @db.VarChar(255)
  password           String                 @db.VarChar(255)
  hashedRefreshToken String?                @db.VarChar(255)
  userCompanies      sys_UserCompanyRole[]
}

model sys_UserCompanyRole {
  id         Int                    @id @default(autoincrement()) @db.SmallInt
  user_id    Int                    @db.SmallInt
  role_id    String                 @db.Char(20)
  company_id String                 @db.Char(5)
  branch_id  String                 @db.Char(10)
  iStatus    MasterRecordStatusEnum @default(ACTIVE)
  isDefault  Boolean?               @default(false)
  role       sys_Role               @relation(fields: [role_id], references: [id])
  user       sys_User               @relation(fields: [user_id], references: [id])
  permission sys_Menu_Permission[]

  @@unique([user_id, company_id, branch_id])
}

model sys_Menu {
  id               Int                    @id @default(autoincrement())
  parent_id        Int                    @db.SmallInt
  menu_description String                 @db.VarChar(255)
  href             String                 @db.VarChar(255)
  module_id        String                 @db.Char(3)
  menu_type        String                 @db.VarChar(50)
  has_child        Boolean                @default(false)
  icon             String                 @db.VarChar(50)
  iStatus          MasterRecordStatusEnum @default(ACTIVE)
  createdBy        String?                @db.Char(10)
  createdAt        DateTime               @default(now())
  updatedBy        String?                @db.Char(10)
  updatedAt        DateTime?
  company_id       String                 @db.Char(5)
  branch_id        String                 @db.Char(10)
  permissions      sys_Menu_Permission[]  @relation("MenuPermissions")

  parent   sys_Menu?  @relation("SubMenu", fields: [parent_id], references: [id])
  children sys_Menu[] @relation("SubMenu")
}

model sys_Menu_Permission {
  id                 Int                    @id @default(autoincrement())
  userCompanyRole_id Int                    @db.SmallInt
  menu_id            Int
  can_view           Boolean                @default(false)
  can_create         Boolean                @default(false)
  can_edit           Boolean                @default(false)
  can_delete         Boolean                @default(false)
  can_print          Boolean                @default(false)
  can_approve        Boolean                @default(false)
  iStatus            MasterRecordStatusEnum @default(ACTIVE)
  createdBy          String?                @db.Char(10)
  createdAt          DateTime               @default(now())
  updatedBy          String?                @db.Char(10)
  updatedAt          DateTime?
  company_id         String                 @db.Char(5)
  branch_id          String                 @db.Char(10)

  menu sys_Menu @relation("MenuPermissions", fields: [menu_id], references: [id], onDelete: Cascade)

  userCompanyRole sys_UserCompanyRole @relation(fields: [userCompanyRole_id], references: [id], onDelete: Cascade)

  @@unique([userCompanyRole_id, menu_id], map: "unique_userCompanyRole_id_menu_id")
}

model sys_Migration_log {
  id             Int      @id @default(autoincrement())
  from_tableName String
  to_tableName   String
  migratedAt     DateTime
  status         String
}

model imc_Warehouse {
  id         String                 @id @db.Char(4)
  name       String?                @db.Char(60)
  iMain      Int?
  iStatus    MasterRecordStatusEnum @default(ACTIVE)
  address    String?                @db.VarChar(250)
  postalCode String?                @db.Char(6)
  phone      String?                @db.Char(12)
  createdBy  String?                @db.Char(10)
  createdAt  DateTime
  updatedBy  String?                @db.Char(10)
  updatedAt  DateTime
  company_id String                 @db.Char(5)
  branch_id  String                 @db.Char(10)
  floor      imc_Floor[]
}

model imc_Floor {
  warehouse_id String                 @db.Char(4)
  id           String                 @id(map: "pk_ic_floor") @db.Char(5)
  name         String?                @db.Char(35)
  iStatus      MasterRecordStatusEnum @default(ACTIVE)
  createdBy    String?                @db.Char(10)
  createdAt    DateTime
  updatedBy    String?                @db.Char(10)
  updatedAt    DateTime
  company_id   String                 @db.Char(5)
  branch_id    String                 @db.Char(10)
  warehouse    imc_Warehouse          @relation(fields: [warehouse_id], references: [id], onDelete: NoAction)
  row          imc_Row[]
  shelf        imc_Shelf[]
}

model imc_Shelf {
  floor_id   String                 @db.Char(5)
  id         String                 @db.Char(15)
  name       String?                @db.Char(35)
  iStatus    MasterRecordStatusEnum @default(ACTIVE)
  createdBy  String?                @db.Char(10)
  createdAt  DateTime
  updatedBy  String?                @db.Char(10)
  updatedAt  DateTime
  company_id String                 @db.Char(5)
  branch_id  String                 @db.Char(10)
  imc_row    imc_Row[]
  imc_floor  imc_Floor              @relation(fields: [floor_id], references: [id], onDelete: NoAction)

  @@id([floor_id, id], map: "pk_ic_shelf")
  @@unique([floor_id, id], map: "unique_floor_id_shelf_id")
}

model imc_Row {
  floor_id   String                 @db.Char(5)
  shelf_id   String                 @db.Char(15)
  id         String                 @db.Char(15)
  name       String?                @db.Char(35)
  iStatus    MasterRecordStatusEnum @default(ACTIVE)
  createdBy  String?                @db.Char(10)
  createdAt  DateTime
  updatedBy  String?                @db.Char(10)
  updatedAt  DateTime
  company_id String                 @db.Char(5)
  branch_id  String                 @db.Char(10)
  storages   String?                @db.Char(15)
  floor      imc_Floor              @relation(fields: [floor_id], references: [id], onDelete: NoAction)
  shelf      imc_Shelf              @relation(fields: [floor_id, shelf_id], references: [floor_id, id], onDelete: NoAction)

  @@id([floor_id, shelf_id, id], map: "pk_ic_row")
  @@unique([floor_id, shelf_id, id], map: "unique_floor_id_shelf_id_row_id")
}

/// *
/// * Product grouping
model imc_Uom {
  id         String                 @db.Char(10)
  name       String?                @db.VarChar(50)
  iStatus    MasterRecordStatusEnum @default(ACTIVE)
  remarks    String?                @db.VarChar(250)
  createdBy  String?                @db.Char(10)
  createdAt  DateTime               @default(now())
  updatedBy  String?                @db.Char(10)
  updatedAt  DateTime
  company_id String                 @db.Char(5)
  branch_id  String                 @db.Char(10)
  products   imc_Product[]

  @@id([company_id, id], map: "pk_imc_Uoms")
}

model imc_CategoryType {
  id           Int                    @id @db.SmallInt
  name         String?                @db.VarChar(20)
  iStatus      MasterRecordStatusEnum @default(ACTIVE)
  remarks      String?                @db.VarChar(250)
  stock_acct   String?                @db.Char(10)
  sales_acct   String?                @db.Char(10)
  cogs_acct    String?                @db.Char(10)
  expense_acct String?                @db.Char(10)
  asset_acct   String?                @db.Char(10)
  createdBy    String?                @db.Char(10)
  createdAt    DateTime               @default(now())
  updatedBy    String?                @db.Char(10)
  updatedAt    DateTime
  company_id   String                 @db.Char(5)
  branch_id    String                 @db.Char(10)
  categories   imc_Category[]
}

model imc_Category {
  type          Int                    @db.SmallInt
  id            String                 @db.Char(10)
  name          String?                @db.VarChar(80)
  slug          String?                @unique @db.VarChar(50)
  remarks       String?                @db.VarChar(250)
  iStatus       MasterRecordStatusEnum @default(ACTIVE)
  iShowedStatus WebsiteDisplayStatus   @default(HIDDEN)
  imageURL      String?                @db.VarChar(250)
  createdBy     String?                @db.Char(10)
  createdAt     DateTime               @default(now())
  updatedBy     String?                @db.Char(10)
  updatedAt     DateTime
  company_id    String                 @db.Char(5)
  branch_id     String                 @db.Char(10)
  href          String?                @db.VarChar(150)
  icon          String?                @db.VarChar(50)
  categoryType  imc_CategoryType       @relation(fields: [type], references: [id], onUpdate: NoAction)
  products      imc_Product[]
  subCategories imc_SubCategory[]

  @@id([company_id, id], map: "pk_imc_Categories")
  @@unique([company_id, id], map: "company_id_id")
}

model imc_SubCategory {
  id           String                 @db.Char(10)
  category_id  String                 @db.Char(10)
  name         String                 @db.VarChar(80)
  slug         String                 @db.VarChar(50)
  iStatus      MasterRecordStatusEnum @default(ACTIVE)
  remarks      String?                @db.VarChar(250)
  createdBy    String?                @db.Char(10)
  createdAt    DateTime               @default(now())
  updatedBy    String?                @db.Char(10)
  updatedAt    DateTime
  company_id   String                 @db.Char(5)
  branch_id    String                 @db.Char(10)
  imc_Products imc_Product[]
  category     imc_Category           @relation(fields: [company_id, category_id], references: [company_id, id])

  @@id([company_id, category_id, id], map: "pk_imc_SubCategories")
}

model imc_Brand {
  id           String                 @db.Char(10)
  name         String                 @db.VarChar(50)
  slug         String?                @db.VarChar(50)
  iStatus      MasterRecordStatusEnum @default(ACTIVE)
  remarks      String?                @db.VarChar(250)
  createdBy    String?                @db.Char(10)
  createdAt    DateTime               @default(now())
  updatedBy    String?                @db.Char(10)
  updatedAt    DateTime
  company_id   String                 @db.Char(5)
  branch_id    String                 @db.Char(10)
  imc_Products imc_Product[]

  @@id([company_id, id], map: "pk_imc_Brands")
}

model imc_Product {
  id             String                 @db.Char(20)
  register_id    String?                @db.Char(20)
  catalog_id     String?                @db.Char(20)
  name           String                 @db.VarChar(250)
  slug           String?                @db.VarChar(250)
  category_id    String                 @db.Char(10)
  subCategory_id String                 @db.Char(10)
  brand_id       String                 @db.Char(10)
  uom_id         String                 @db.Char(10)
  eCatalogURL    String?                @db.VarChar(250)
  remarks        String?                @db.VarChar(250)
  iStatus        MasterRecordStatusEnum @default(ACTIVE)
  iShowedStatus  WebsiteDisplayStatus   @default(HIDDEN)
  isMaterial     Boolean                @default(false)
  isService      Boolean                @default(false)
  isFinishing    Boolean                @default(false)
  isAccessories  Boolean                @default(false)
  createdBy      String?                @db.Char(10)
  createdAt      DateTime               @default(now())
  updatedBy      String?                @db.Char(10)
  updatedAt      DateTime
  company_id     String                 @db.Char(5)
  branch_id      String                 @db.Char(10)
  descriptions   imc_ProductDesc?
  images         imc_ProductImage[]
  specs          imc_ProductSpec?
  productStock   imc_ProductStock[]
  brand          imc_Brand              @relation(fields: [company_id, brand_id], references: [company_id, id], onUpdate: NoAction)
  category       imc_Category           @relation(fields: [company_id, category_id], references: [company_id, id], onUpdate: NoAction)
  subCategory    imc_SubCategory        @relation(fields: [company_id, category_id, subCategory_id], references: [company_id, category_id, id], onUpdate: NoAction)
  uom            imc_Uom                @relation(fields: [company_id, uom_id], references: [company_id, id], onUpdate: NoAction)

  @@id([company_id, id], map: "pk_imc_Products")
  @@unique([company_id, id], map: "unique_company_id_id")
}

model imc_ProductStock {
  id                 String                 @db.Char(20)
  iStatus            MasterRecordStatusEnum @default(ACTIVE)
  warehouse_id       String                 @db.Char(4)
  floor_id           String                 @db.Char(5)
  shelf_id           String                 @db.Char(15)
  row_id             String                 @db.Char(15)
  batch_no           String?                @db.Char(20)
  mExpired_dt        String                 @db.Char(10)
  yExpired_dt        String                 @db.Char(4)
  product_cd         String?                @db.Char(20)
  i_month_expired    Int?
  i_year_expired     Int?
  req_qty            Decimal?               @db.Decimal(12, 4)
  po_qty             Decimal?               @db.Decimal(12, 4)
  grn_qty            Decimal?               @db.Decimal(12, 4)
  so_qty             Decimal?               @db.Decimal(12, 4)
  spk_qty            Decimal?               @db.Decimal(12, 4)
  sj_qty             Decimal?               @db.Decimal(12, 4)
  sl_invoice_qty     Decimal?               @db.Decimal(12, 4)
  sl_return_qty      Decimal?               @db.Decimal(12, 4)
  po_return_qty      Decimal?               @db.Decimal(12, 4)
  stock_opname_qty   Decimal?               @db.Decimal(12, 4)
  intern_receive_qty Decimal?               @db.Decimal(12, 4)
  intern_issue_qty   Decimal?               @db.Decimal(12, 4)
  onhand_qty         Decimal?               @db.Decimal(22, 4)
  unit_cost          Decimal?               @db.Decimal(21, 4)
  selling_price      Decimal?               @db.Decimal(21, 4)
  createdBy          String?                @db.Char(10)
  createdAt          DateTime               @default(now())
  updatedBy          String?                @db.Char(10)
  updatedAt          DateTime
  company_id         String                 @db.Char(5)
  branch_id          String                 @db.Char(10)
  products           imc_Product            @relation(fields: [id, company_id], references: [id, company_id], onUpdate: NoAction)

  @@id([id, floor_id, shelf_id, row_id, mExpired_dt, yExpired_dt, warehouse_id, company_id])
}

model imc_ProductStockCard {
  customer_or_supplier_id String                 @db.Char(20)
  trx_id                  String                 @db.Char(2)
  trx_class               String                 @db.Char(2)
  module_id               String                 @db.Char(2)
  is_in_or_out            String                 @db.Char(1)
  doc_year                Int                    @db.SmallInt
  doc_month               Int                    @db.SmallInt
  doc_date                DateTime
  doc_id                  String                 @db.Char(20)
  descs                   String?                @db.VarChar(250)
  mutation_id             String                 @db.Char(20)
  mutation_date           DateTime
  ref_id                  String                 @db.Char(20)
  ref_date                DateTime
  iStatus                 MasterRecordStatusEnum @default(ACTIVE)
  warehouse_id            String                 @db.Char(4)
  to_warehouse_id         String                 @db.Char(4)
  srn_seq                 Int                    @db.SmallInt
  product_id              String                 @db.Char(20)
  qty                     Decimal                @db.Decimal(12, 4)
  mutation_qty            Decimal                @db.Decimal(12, 4)
  unit_cost               Decimal?               @db.Decimal(21, 4)
  mutation_cost           Decimal?               @db.Decimal(21, 4)
  floor_id                String                 @db.Char(5)
  shelf_id                String                 @db.Char(15)
  row_id                  String                 @db.Char(15)
  batch_no                String                 @db.Char(20)
  mExpired_dt             String                 @db.Char(10)
  yExpired_dt             String                 @db.Char(4)
  product_cd              String?                @db.Char(20)
  i_month_expired         Int?                   @db.SmallInt
  i_year_expired          Int?
  selling_price           Decimal?               @db.Decimal(21, 4)
  createdBy               String?                @db.Char(10)
  createdAt               DateTime               @default(now())
  updatedBy               String?                @db.Char(10)
  updatedAt               DateTime
  company_id              String                 @db.Char(5)
  branch_id               String                 @db.Char(10)

  @@id([product_id, floor_id, shelf_id, row_id, mExpired_dt, yExpired_dt, doc_id, mutation_id, srn_seq, warehouse_id, company_id])
}

model imc_ProductDesc {
  id           String      @db.Char(20)
  descriptions String?
  benefits     String?
  createdBy    String      @db.Char(10)
  createdAt    DateTime    @default(now())
  updatedBy    String      @db.Char(10)
  updatedAt    DateTime
  company_id   String      @db.Char(5)
  branch_id    String      @db.Char(10)
  products     imc_Product @relation(fields: [id, company_id], references: [id, company_id], onUpdate: NoAction)

  @@id([id, company_id])
}

model imc_ProductSpec {
  id                 String      @db.Char(20)
  itemFunctions      String?     @db.VarChar(250)
  item_type          String?     @db.VarChar(100)
  item_model         String?     @db.VarChar(100)
  construction       String?
  mattress           String?     @db.VarChar(250)
  mattressSize       String?     @db.VarChar(250)
  mattressThickness  String?     @db.VarChar(250)
  finishing          String?     @db.VarChar(250)
  dimension          String?     @db.VarChar(250)
  powerSupply        String?     @db.VarChar(150)
  loadCapacity       String?     @db.VarChar(150)
  systemFilter       String?     @db.VarChar(180)
  accessories        String?     @db.VarChar(250)
  sideRail           String?     @db.VarChar(180)
  ivStand            String?     @db.VarChar(180)
  wheels             String?     @db.VarChar(150)
  maxLoad            String?     @db.VarChar(150)
  size               String?     @db.VarChar(150)
  weight             String?     @db.VarChar(150)
  standSize          String?     @db.VarChar(150)
  position           String?     @db.VarChar(150)
  base               String?     @db.VarChar(150)
  basePlate          String?     @db.VarChar(180)
  cover              String?     @db.VarChar(150)
  material           String?     @db.VarChar(150)
  coverMaterial      String?     @db.VarChar(150)
  typeScreen         String?     @db.VarChar(150)
  powerConsumption   String?     @db.VarChar(150)
  lamp               String?     @db.VarChar(150)
  movers             String?     @db.VarChar(200)
  rim                String?     @db.VarChar(200)
  custodyFeet        String?     @db.VarChar(200)
  foot               String?     @db.VarChar(200)
  footWear           String?     @db.VarChar(200)
  pole               String?     @db.VarChar(200)
  inputVoltage       String?     @db.VarChar(150)
  outputVoltage      String?     @db.VarChar(150)
  sideGuard          String?     @db.VarChar(250)
  footandheadPanel   String?     @db.VarChar(250)
  temperatureControl String?     @db.VarChar(250)
  top                String?     @db.VarChar(150)
  foodTray           String?     @db.VarChar(250)
  traycorpse         String?     @db.VarChar(250)
  pillowthecorpse    String?     @db.VarChar(250)
  lightPole          String?     @db.VarChar(250)
  sterilizing        String?     @db.VarChar(250)
  filter             String?     @db.VarChar(250)
  bodyFrame          String?     @db.VarChar(250)
  underPressure      String?     @db.VarChar(250)
  foundationTray     String?     @db.VarChar(250)
  door               String?     @db.VarChar(250)
  handle             String?     @db.VarChar(250)
  medicineBox        String?     @db.VarChar(250)
  handleTrolley      String?     @db.VarChar(250)
  drawer             String?     @db.VarChar(250)
  systemControl      String?     @db.VarChar(250)
  bodyFrameWork      String?     @db.VarChar(250)
  remarks            String?
  createdBy          String?     @db.Char(10)
  createdAt          DateTime?   @default(now())
  updatedBy          String?     @db.Char(10)
  updatedAt          DateTime
  company_id         String      @db.Char(5)
  branch_id          String      @db.Char(10)
  products           imc_Product @relation(fields: [id, company_id], references: [id, company_id], onUpdate: NoAction)

  @@id([id, company_id], map: "pk_productSpecs")
}

model imc_ProductImage {
  id         String                 @db.Char(25)
  product_id String                 @db.Char(20)
  imageURL   String                 @db.VarChar(250)
  isPrimary  Boolean
  iStatus    MasterRecordStatusEnum @default(ACTIVE)
  createdBy  String?                @db.Char(10)
  createdAt  DateTime               @default(now())
  updatedBy  String                 @db.Char(10)
  updatedAt  DateTime
  company_id String                 @db.Char(5)
  branch_id  String                 @db.Char(10)
  products   imc_Product            @relation(fields: [product_id, company_id], references: [id, company_id], onUpdate: NoAction)

  @@id([product_id, company_id, id], map: "pk_imc_ProductImages")
}

model cms_Billboard {
  id            Int                    @default(autoincrement()) @db.SmallInt
  section       Int                    @db.SmallInt
  title         String?                @db.VarChar(50)
  description   String?                @db.VarChar(250)
  isShowBtn     Boolean?
  btnText       String?                @db.VarChar(50)
  isImage       Boolean?
  iStatus       MasterRecordStatusEnum @default(ACTIVE)
  iShowedStatus WebsiteDisplayStatus   @default(HIDDEN)
  remarks       String?                @db.VarChar(250)
  createdBy     String?                @db.Char(10)
  createdAt     DateTime?              @default(now())
  updatedBy     String?                @db.Char(10)
  updatedAt     DateTime
  company_id    String                 @db.Char(5)
  branch_id     String                 @db.Char(10)
  contentURL    String                 @db.VarChar(250)
  content_id    String                 @db.Char(30)

  @@id([company_id, id], map: "pk_cms_Billboards")
}

enum MasterRecordStatusEnum {
  INACTIVE @map("0")
  ACTIVE   @map("1")
}

enum TransactionRecordStatusEnum {
  DRAFT    @map("0")
  APPROVED @map("1")
  PENDING  @map("2")
  CANCEL   @map("3")
}

enum WebsiteDisplayStatus {
  HIDDEN @map("0")
  SHOW   @map("1")
}
